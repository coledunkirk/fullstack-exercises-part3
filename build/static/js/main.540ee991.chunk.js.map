{"version":3,"sources":["services/people.js","components/Form.js","components/Filter.js","components/Info.js","components/People.js","components/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","peopleService","getAll","axios","get","then","response","data","create","newObject","post","deletePerson","id","delete","update","put","Form","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setMessage","setMessageClass","onSubmit","event","preventDefault","personsObject","name","number","console","log","setTimeout","find","person","toLowerCase","window","confirm","filter","updatedPerson","map","catch","error","updateInfo","newPerson","concat","value","onChange","target","type","Filter","setFilter","Info","onClick","People","personsToShow","includes","Notification","message","messageClass","className","App","useState","useEffect","initialPeople","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.540ee991.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst peopleService = (() => {\r\n  const getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\n  const create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\n  const deletePerson = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\n  const update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\n  return {getAll, create, deletePerson, update}\r\n})()\r\n\r\nexport default peopleService","import React from 'react'\r\nimport peopleService from '../services/people'\r\n\r\nconst Form = ({ persons, setPersons, newName, setNewName, newNumber, setNewNumber, setMessage, setMessageClass }) => {\r\n  const updateInfo = (personsObject) => {\r\n    if (window.confirm(\r\n      `${personsObject.name} is already added to the phonebook. Do you want to replace the old number with a new one?`\r\n      )) {\r\n      const id = persons.filter(person => person.name.toLowerCase() === newName.toLowerCase())[0].id\r\n      peopleService\r\n        .update(id, personsObject)\r\n        .then(updatedPerson => {\r\n          setPersons(persons.map(person => person.id !== id ? person : updatedPerson))\r\n          setNewName('')\r\n          setNewNumber('')\r\n        })\r\n        .catch(error => {\r\n          setMessageClass('error')\r\n          setMessage(`${personsObject.name} has already been removed from the server`)\r\n          setTimeout(() => {\r\n            setMessage(null)\r\n          }, 5000)\r\n          setPersons(persons.filter(person => person.id !== id))\r\n          peopleService.deletePerson(id)\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleMissingInput = () => {\r\n    setMessageClass('error')\r\n    setMessage('Please enter a name and number')\r\n    setTimeout(() => {\r\n      setMessage(null)\r\n    }, 5000)\r\n  }\r\n  \r\n  const addInfo = (event) => {\r\n    event.preventDefault()\r\n    const personsObject = {\r\n      name: newName,\r\n      number: newNumber\r\n    }\r\n    console.log(personsObject)\r\n    personsObject.name === '' || personsObject.number === ''\r\n    ? handleMissingInput()\r\n    : persons.find(person => person.name.toLowerCase() === newName.toLowerCase())\r\n    ?  updateInfo(personsObject)\r\n    : peopleService\r\n        .create(personsObject)\r\n        .then(newPerson => {\r\n          setPersons(persons.concat(newPerson))\r\n          setNewName('')\r\n          setNewNumber('')\r\n          setMessageClass('added')\r\n          setMessage(\r\n            `Added ${newPerson.name}`\r\n          )\r\n          setTimeout(() => {\r\n            setMessage(null)\r\n          }, 5000)\r\n        })\r\n        .catch(error => {\r\n          setMessageClass('error')\r\n          setMessage(error.response.data.error)\r\n          setTimeout(() => {\r\n            setMessage(null)\r\n          }, 5000)\r\n        })\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={addInfo}>\r\n      <div>\r\n        name: <input \r\n          value={newName}\r\n          onChange={handleNameChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        number: <input \r\n          value={newNumber}\r\n          onChange={handleNumberChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n  </form>\r\n  )\r\n}\r\n\r\nexport default Form","import React from 'react'\r\n\r\nconst Filter = ({ filter, setFilter }) => {\r\n  const handleFilterChange = (event) => {\r\n    setFilter(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      filter <input\r\n                  value={filter}\r\n                  onChange={handleFilterChange}\r\n                />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Info = ({ name, number, deletePerson }) => {\r\n  return (\r\n    <li>\r\n      <div>{name} {number}</div>\r\n      <button onClick={deletePerson}>delete</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Info","import React from 'react'\r\nimport Info from './Info'\r\nimport peopleService from '../services/people'\r\n\r\nconst People = ({ persons, filter, setPersons }) => {\r\n  const handleDelete = id => {\r\n    if (window.confirm('Are you sure you want to delete this person?')) {\r\n      peopleService\r\n        .deletePerson(id)\r\n      setPersons(persons.filter(person => person.id !== id))\r\n    }\r\n  }\r\n\r\n  const personsToShow = filter\r\n  ? persons.filter(person => person.name.toLowerCase()\r\n      .includes(filter.toLowerCase()))\r\n  : persons\r\n  \r\n  return (\r\n    <ul>\r\n      {personsToShow.map(person =>\r\n        <Info \r\n          key={person.name} \r\n          name={person.name} \r\n          number={person.number} \r\n          deletePerson={() => handleDelete(person.id)}\r\n        />\r\n      )}\r\n  </ul>\r\n  )\r\n}\r\n\r\nexport default People","import React from 'react'\r\n\r\nconst Notification = ({ message, messageClass }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={messageClass}>\r\n      {message}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Form from './components/Form'\nimport Filter from './components/Filter'\nimport People from './components/People'\nimport Notification from './components/Notification'\nimport peopleService from './services/people'\n\nconst App = () => {\n  const [persons, setPersons] = useState([]) \n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [message, setMessage] = useState(null)\n  const [messageClass, setMessageClass] = useState('added')\n\n  useEffect(() => {\n    peopleService\n      .getAll()\n      .then(initialPeople => {\n        setPersons(initialPeople)\n      })\n  }, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification \n        message={message}\n        messageClass={messageClass}\n      />\n      <Filter \n        filter={filter}\n        setFilter={setFilter}\n      />\n      <h2>add a new</h2>\n      <Form \n        persons={persons} \n        setPersons={setPersons} \n        newName={newName} \n        setNewName={setNewName} \n        newNumber={newNumber}\n        setNewNumber={setNewNumber}\n        setMessage={setMessage}\n        setMessageClass={setMessageClass}\n      />\n      <h2>Numbers</h2>\n      <People \n        persons={persons}\n        filter={filter}\n        setPersons={setPersons}\n      />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'))\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}